import sched  
import time  
import requests  
import smtplib  
from email.mime.text import MIMEText  
  
# 配置  
API_KEY = 'your_openweathermap_api_key'  
CITY = 'Beijing'  
EMAIL_USER = 'your_email@example.com'  
EMAIL_PASS = 'your_email_password'  
TO_EMAIL = 'user_email@example.com'  
CHECK_INTERVAL = 60 * 10  # 每10分钟检查一次  
TEMPERATURE_THRESHOLD = 35  # 假设高温预警阈值为35摄氏度  
  
# 初始化调度器  
scheduler = sched.scheduler(time.time, time.sleep)  
  
def fetch_weather_data():  
    url = f'http://api.openweathermap.org/data/2.5/weather?q={CITY}&appid={API_KEY}&units=metric'  
    response = requests.get(url)  
    data = response.json()  
      
    if response.status_code == 200:  
        temp = data['main']['temp']  
        return temp  
    else:  
        print(f"Error fetching weather data: {data['message']}")  
        return None  
        def send_alert(temp):  
    msg = MIMEText(f"极端天气警报！当前{CITY}的温度为{temp}摄氏度，请注意防暑降温。")  
    msg['Subject'] = '极端天气警报'  
    msg['From'] = EMAIL_USER  
    msg['To'] = TO_EMAIL  
  
    try:  
        server = smtplib.SMTP('smtp.example.com', 587)  # 根据你的邮件服务提供商修改  
        server.starttls()  
        server.login(EMAIL_USER, EMAIL_PASS)  
        server.sendmail(EMAIL_USER, TO_EMAIL, msg.as_string())  
        server.quit()  
        print("警报已发送")  
    except Exception as e:  
        print(f"发送邮件失败: {e}")  
  